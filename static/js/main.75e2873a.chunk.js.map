{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Draggable","props","useDrag","item","type","begin","console","log","setPath","end","ref","DropZone","useDrop","accept","drop","dropRef","App","useState","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","debugMode","backend","TouchBackend","document","getElementById"],"mappings":"+NAKMA,EAAY,SAAAC,GAAU,IAAD,EACTC,YAAQ,CACtBC,KAAM,CACJC,KAAM,QAERC,MAAO,WACLC,QAAQC,IAAI,cACZN,EAAMO,QAAQ,cAEhBC,IAAK,WACHH,QAAQC,IAAI,YACZN,EAAMO,QAAQ,gBAVTE,EADgB,oBAezB,OAAO,qBAAKA,IAAKA,EAAV,uCAGHC,EAAW,WAAO,IAAD,EACDC,YAAQ,CAC1BC,OAAQ,OACRC,KAAM,kBAAMR,QAAQC,IAAR,qBAFLQ,EADY,oBAMrB,OACE,qBAAKL,IAAKK,EAAV,iEAeJ,IAUeC,EArBf,WAAgB,IAAD,EACWC,mBAAoC,aAD/C,mBACNC,EADM,KACAV,EADA,KAEb,OACE,gCACY,cAATU,EAAuB,cAAC,EAAD,CAAWV,QAASA,IAAc,KAC1D,cAAC,EAAD,QCzBSW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAaC,WAAW,EAAMC,QAASC,IAAvC,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.75e2873a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { DragPreviewImage, useDrag, useDragLayer, useDrop } from \"react-dnd\";\n\nconst Draggable = props => {\n  const [, ref] = useDrag({\n    item: {\n      type: \"type\"\n    },\n    begin: () => {\n      console.log(\"DRAG BEGIN\");\n      props.setPath(\"drop-zone\");\n    },\n    end: () => {\n      console.log(\"DRAG END\");\n      props.setPath(\"draggable\");\n    }\n  });\n\n  return <div ref={ref}>I AM DRAGGABLE. DRAG ME.</div>;\n};\n\nconst DropZone = () => {\n  const [, dropRef] = useDrop({\n    accept: \"type\",\n    drop: () => console.log(`Received drop.`)\n  });\n\n  return (\n    <div ref={dropRef}>I AM DROP ZONE. PLEASE DROP THE DRAGGABLE OVER ME.</div>\n  );\n};\n\nfunction App() {\n  const [path, setPath] = useState<\"draggable\" | \"drop-zone\">(\"draggable\");\n  return (\n    <div>\n      {path === \"draggable\" ? <Draggable setPath={setPath} /> : null}\n      <DropZone />\n    </div>\n  );\n}\n\n/* This has the same problem. */\nconst App2 = () => {\n  const [path, setPath] = useState<\"draggable\" | \"drop-zone\">(\"draggable\");\n  return (\n    <div>\n      {path === \"draggable\" ? <Draggable setPath={setPath} /> : null}\n      <DropZone />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <DndProvider debugMode={true} backend={TouchBackend}>\n        <App />\n      </DndProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}